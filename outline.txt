1. Introduction
   [Anthony]
   What can happen with poorly maintained software?

2. Project management
   [Anthony]
  - governance model
  - license
  - release cycle
    - beta testing
  - publication

3. Packaging and Distribution and Life cycle
   [Dan]
  - cross platform
  - maintenance
  - installers/packaging
  - DOI for release

4. Support and Documentation
   [Anthony]
  - means of support
  - user documentation
    - online
    - local
    - video
  - developer documentation

5. Data formats and interoperability
   [Dan]
  - standard formats
    - NeXus
  - history

6. Architecture
   [Dan]
  - build system
  - modular
  - plugins
  - scripting
  - GUI

7. Business as usual
   [Dan]
  - development methodology
  - SCM
  - issues/ticketing
  - CI
  - code analysis/quality tools
  - code/change review
  - coding standards

8. Standard tools
   [Dan]
  - Why using a similar set of tools to others is good
  - tools:
    - scripting -> Python
    - GUI -> Qt
    - languages -> C++, Python
    - SCM -> Git
    - CI -> Travis/Jenkins
    - static/dynamic analysis

9. SINE2020 section
   [Thomas & Anders]

10. Conclusion
   [Anthony]

11. Acknowledgements
